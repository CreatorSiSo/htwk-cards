---
import Page from "../template/Page.astro";
import Card from "../components/Card.astro";
import type { ImageMetadata } from "astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
	"../assets/card_en_*.svg"
);
---

<Page lang="en" title="HTWK Cards" class="bg-zinc-900 text-white flex flex-col">
	<nav
		class="flex p-4 w-full bg-zinc-800 text-[#ede0ce] border-b-2 border-current sticky top-0 z-50"
	>
		<h1 class="text-xl font-semibold">HTWK Cards</h1>
	</nav>

	<main class="flex flex-col items-center gap-10">
		<section
			id="cards-section"
			class="relative flex flex-wrap justify-center gap-10 px-10 max-w-7xl mt-10"
		>
			{Object.values(images).map((image) => <Card image={image} />)}
		</section>

		<div
			id="backdrop"
			class="fixed w-full h-full transition ease-out opacity-0 backdrop-blur-sm backdrop-brightness-75 backdrop-saturate-50 flex justify-between items-center"
		>
			<button class="self-stretch p-6 bg-red-600 collapse sm:visible">
				Prev
			</button>

			<Card image={Object.values(images)[0]} class="" />

			<button class="self-stretch p-6 bg-red-600 collapse sm:visible">
				Next
			</button>
		</div>
	</main>
</Page>

<script>
	import { throttle } from "../common.ts";
	import { createEffect, createSignal } from "solid-js";

	const containers = document.querySelectorAll("#cards-section > div");
	const cards = Array.from(containers).map((container: HTMLElement, index) => {
		return {
			index,
			container,
		};
	});

	const selection = cards.map(() => createSignal(false));

	const backdrop = document.querySelector("#backdrop") as HTMLElement;
	backdrop.addEventListener("mousedown", () => {
		for (const [_, set_selected] of selection) {
			set_selected(false);
		}
	});
	const backdrop_card = backdrop.children[1] as HTMLElement;
	const backdrop_image = backdrop_card.firstElementChild as HTMLImageElement;

	for (const { index, container } of cards) {
		const [selected, set_selected] = selection[index];

		createEffect(() => {
			if (!selected()) {
				document.body.style.overflow = "visible";
				backdrop.classList.add("opacity-0");
				backdrop.classList.add("pointer-events-none");
				container.style.zIndex = "0";
				backdrop_card.style.transform = "scale(1.0)";
				backdrop_card.style.transition = "";
				return;
			}

			backdrop_image.src = container.firstElementChild.src;

			const card_bounds = container.getBoundingClientRect();
			const backdrop_card_bounds = backdrop_card.getBoundingClientRect();
			const x = card_bounds.x - backdrop_card_bounds.x;
			const y = card_bounds.y - backdrop_card_bounds.y;
			backdrop_card.style.transform = `translate(${x}px, ${y}px)`;
			requestAnimationFrame(() => {
				backdrop_card.style.transition = "transform 400ms ease-out";
				backdrop_card.style.transform = "translate(0px, 0px) scale(1.25)";
			});

			document.body.style.overflow = "hidden";
			backdrop.classList.remove("opacity-0");
			backdrop.classList.remove("pointer-events-none");
		});

		container.addEventListener(
			"mousedown",
			throttle(() => {
				if (!selected()) {
					set_selected(true);
				}
			}, 200)
		);
	}
</script>
